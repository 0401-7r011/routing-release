<%
  require 'json'

  def discover_external_ip
    networks = spec.networks.marshal_dump

    _, network = networks.find do |_name, network_spec|
      network_spec.default
    end

    if !network
      _, network = networks.first
    end

    if !network
      raise "Could not determine IP via network spec: #{networks}"
    end

    network.ip
  end

  nats_machines = nil
  if_p('nats.machines') do |ips|
    nats_machines = ips.compact
  end.else do
    if_link('nats') do
      nats_machines = link('nats').instances.map { |instance| instance.address }
    end
  end

  nats_port = nil
  if_p('nats.port') do |prop|
    nats_port = prop
  end.else do
    if_link('nats') do
      link('nats').if_p("nats.port") do |prop|
        nats_port = prop
      end
    end
  end

  nats_user = nil
  if_p('nats.user') do |prop|
    nats_user = prop
  end.else do
    if_link('nats') do
      link('nats').if_p("nats.user") do |prop|
        nats_user = prop
      end
    end
  end

  nats_password = nil
  if_p('nats.password') do |prop|
    nats_password = prop
  end.else do
    if_link('nats') do
      link('nats').if_p("nats.password") do |prop|
        nats_password = prop
      end
    end
  end
%>
---
message_bus_servers:
<% nats_machines.each do |ip| %>
    - host: <%= ip %>:<%= nats_port %>
      user: <%= nats_user %>
      password: <%= nats_password %>
<% end %>

routes: <%= p('route_registrar.routes').to_json %>

host: <%= discover_external_ip %>
