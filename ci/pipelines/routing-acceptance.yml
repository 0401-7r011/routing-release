groups:
- name: routing-acceptance-ci
  jobs:
  - superman-deploy-cf
  - superman-cats
  - superman-rats
  - bump-to-rc
  - bosh-cleanup
  - deploy-and-run-cipher-suite-tests

- name: maintenance
  jobs:
  - setup-superman
  - destroy-superman
  - delete-cf-deployment

resource_types:
- name: tracker-resource
  type: docker-image
  source:
    repository: concourse/tracker-resource

resources:
# RELEASES
- name: routing-release
  type: git
  source:
    branch: batman-passed
    uri: https://github.com/cloudfoundry/routing-release.git
    ignore_paths:
      - docs
      - ci

- name: routing-release-full
  type: git
  source:
    branch: batman-passed
    uri: https://github.com/cloudfoundry/routing-release.git

- name: routing-release-rc
  type: git
  source:
    branch: release-candidate
    uri: git@github.com:cloudfoundry/routing-release.git
    private_key: ((github_private_key.private_key))

# REPOS
- name: deployments-routing
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/deployments-routing.git
    private_key: ((github_private_key.private_key))

- name: routing-release-ci
  type: git
  source:
    branch: develop
    uri: git@github.com:cloudfoundry/routing-release.git
    private_key: ((github_private_key.private_key))
    paths:
      - ci

- name: bosh-bootloader
  type: git
  source:
    uri: https://github.com/cloudfoundry/bosh-bootloader
    branch: master

- name: bosh-deployment
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/bosh-deployment.git

# CF Deployment
- name: cf-deployment
  type: git
  source:
    branch: release-candidate
    uri: https://github.com/cloudfoundry/cf-deployment.git

# Concourse Tasks
- name: cf-deployment-concourse-tasks
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/cf-deployment-concourse-tasks
    tag_filter: v*

- name: cf-acceptance-tests
  type: git
  source:
    branch: release-candidate
    uri: https://github.com/cloudfoundry/cf-acceptance-tests

- name: cipher-test-release
  type: git
  source:
    branch: master
    uri: https://github.com/cf-routing/cipher-test-release

# ENVS
- name: superman-vars-store
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/deployments-routing.git
    private_key: ((github_private_key.private_key))

- name: superman-integration-configs
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/deployments-routing.git
    private_key: ((github_private_key.private_key))

# STEMCELLS
- name: gcp-stemcell
  type: bosh-io-stemcell
  source:
    name: bosh-google-kvm-ubuntu-trusty-go_agent

# TIMERS
- name: friday-trigger
  type: time
  source:
    location: America/Los_Angeles
    start: 6:00 AM
    stop: 6:01 AM
    days: [Friday]

# APP INTEGRATIONS
- name: tracker-routing
  type: tracker-resource
  source:
    tracker_url: https://www.pivotaltracker.com
    project_id: "1358110"
    token: ((tracker_api_token))

jobs:
# FULL DEPLOY AND TEST - SUPERMAN
- name: superman-deploy-cf
  serial_groups:
  - superman
  - superman-cats
  - superman-rats
  - superman-cipher
  build_logs_to_retain: 100
  plan:
  - in_parallel:
    - get: cf-deployment-concourse-tasks
    - get: cf-deployment
    - get: superman-vars-store
    - get: superman-integration-configs
    - get: routing-release
      trigger: true
    - get: deployments-routing
    - get: routing-release-ci
  - task: upload-stemcell
    file: cf-deployment-concourse-tasks/bosh-upload-stemcell-from-cf-deployment/task.yml
    input_mapping:
      bbl-state: deployments-routing
    params:
      BBL_STATE_DIR: superman/bbl-state
  - task: merge-ops-files
    file: routing-release-ci/ci/tasks/merge-ops-files/task.yml
    params:
      ENVIRONMENT: superman
  - task: deploy-cf-with-created-routing
    file: cf-deployment-concourse-tasks/bosh-deploy-with-created-release/task.yml
    input_mapping:
      bbl-state: deployments-routing
      release: routing-release
      ops-files: merged-operations
      vars-store: superman-vars-store
      vars-files: superman-vars-store
    params:
      SYSTEM_DOMAIN: superman.routing.cf-app.com
      OPS_FILES: |
        use-compiled-releases.yml
        routing_acceptance_tests.yml
        update_watch.yml
        routing_smoke_tests.yml
        add-datadog-firehose-nozzle.yml
        tls_pem.yml
        test/add-persistent-isolation-segment-router.yml
        test/add-persistent-isolation-segment-diego-cell.yml
        add-persistent-isolation-segment-router-ca-certs.yml
        frontend_idle_timeout.yml
        isolation_in_z3.yml
        validate_ssl.yml
        enable_locket_isolated_diego.yml
        ca_certs.yml
        use-internal-lookup-for-route-services.yml
      BBL_STATE_DIR: superman/bbl-state

- name: superman-cats
  serial_groups:
  - superman-cats
  build_logs_to_retain: 100
  plan:
  - in_parallel:
    - get: routing-release-ci
    - get: cf-acceptance-tests
    - get: cf-deployment
      passed: [superman-deploy-cf]
    - get: deployments-routing
      trigger: true
      passed: [superman-deploy-cf]
    - get: superman-vars-store
      passed: [superman-deploy-cf]
    - get: superman-integration-configs
    - get: cf-deployment-concourse-tasks
    - get: routing-release
      passed: [superman-deploy-cf]
      trigger: true
  - task: create-integration-config
    file: routing-release-ci/ci/tasks/create-integration-configs/task.yml
    params:
      ENVIRONMENT: superman
  - task: update-integration-configs
    file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    input_mapping:
      bbl-state: created-integration-configs
      integration-configs: created-integration-configs
    params:
      BBL_STATE_DIR: superman/bbl-state
      CATS_INTEGRATION_CONFIG_FILE: superman/cats_integration_config.json
  - task: run-cats
    input_mapping:
      integration-config: updated-integration-configs
    file: cf-deployment-concourse-tasks/run-cats/task.yml
    params:
      CONFIG_FILE_PATH: superman/cats_integration_config.json

- name: superman-rats
  serial_groups:
  - superman-rats
  build_logs_to_retain: 100
  plan:
  - timeout: 4h
    do:
    - in_parallel:
      - get: deployments-routing
        trigger: true
        passed: [superman-deploy-cf]
      - get: routing-release-ci
      - get: superman-vars-store
        passed: [superman-deploy-cf]
      - get: superman-integration-configs
      - get: cf-deployment
        passed: [superman-deploy-cf]
      - get: routing-release
        passed: [superman-deploy-cf]
        trigger: true
      - get: cf-deployment-concourse-tasks
        passed: [superman-deploy-cf]
    - task: create-integration-config
      file: routing-release-ci/ci/tasks/create-integration-configs/task.yml
      params:
        ENVIRONMENT: superman
    - task: update-integration-configs
      file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
      input_mapping:
        bbl-state: created-integration-configs
        integration-configs: created-integration-configs
      params:
        BBL_STATE_DIR: superman/bbl-state
        RATS_INTEGRATION_CONFIG_FILE: superman/rats_integration_config.json
    - task: run-rats
      input_mapping:
        integration-config: updated-integration-configs
      file: routing-release-ci/ci/tasks/run-rats/task.yml
      params:
        CONFIG_FILE_PATH: superman/rats_integration_config.json
        GINKGO_ARGS: "-v"

- name: deploy-and-run-cipher-suite-tests
  serial_groups:
  - superman-cipher
  plan:
  - in_parallel:
    - get: deployments-routing
    - get: routing-release-ci
    - get: release-dir
      resource: cipher-test-release
      trigger: true
    - get: routing-release
      passed: [superman-deploy-cf]
      trigger: true
    - get: gcp-stemcell
  - task: generate-cipher-manifest
    file: routing-release-ci/ci/tasks/generate-cipher-manifest/task.yml
    params:
      CIPHERS: "ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384"
      ENVIRONMENT: superman
  - task: create-release-tarball
    file: routing-release-ci/ci/tasks/create-release-tarball/task.yml
  - task: deploy-run-errand
    file: routing-release-ci/ci/tasks/run-cipher-suite/task.yml
    params:
      ENVIRONMENT: superman
      DEPLOYMENT: cipher
      MANIFEST: cipher-manifest/cipher.yml
      RELEASES_DIR: "release-tarball/*.tgz"
      STEMCELL_REGEX: gcp-stemcell/*.tgz

- name: bump-to-rc
  serial: true
  plan:
  - get: routing-release
    passed:
    - superman-rats
    - superman-cats
    trigger: true
  - get: routing-release-full
  - put: routing-release-rc
    params:
      repository: routing-release-full
  - try:
      put: tracker-routing
      params:
        repos:
        - routing-release

# INFRASTRUCTURE - superman
- name: setup-superman
  serial_groups:
  - superman
  - superman-cats
  - superman-rats
  - superman-cipher
  build_logs_to_retain: 100
  plan:
  - in_parallel:
    - get: cf-deployment-concourse-tasks
    - get: deployments-routing
    - get: routing-release-ci
    - get: bosh-bootloader
    - get: bosh-deployment
    - get: friday-trigger
      trigger: true
  - task: add-parent-dns
    file: routing-release-ci/ci/tasks/add-parent-dns/task.yml
    params:
      ENVIRONMENT: superman
    input_mapping:
      bbl-state: deployments-routing
  - task: inject-plan-patches
    file: routing-release-ci/ci/tasks/inject-plan-patches/task.yml
    params:
      BBL_STATE_DIR: superman/bbl-state
      PLAN_PATCH_DIR: plan-patches/iso-segs-gcp
    input_mapping:
      bbl-state: updated-bbl-state
      plan-patches: bosh-bootloader
  - task: make-certs
    file: routing-release-ci/ci/tasks/make-certs/task.yml
    params:
      ENVIRONMENT: superman
    input_mapping:
      bbl-state: updated-bbl-state
  - task: setup-superman
    file: cf-deployment-concourse-tasks/bbl-up/task.yml
    params:
      BBL_IAAS: gcp
      BBL_GCP_SERVICE_ACCOUNT_KEY: ((shared_gcp_account_creds))
      BBL_GCP_REGION: us-west1
      BBL_LB_CERT: ../lb_certs/cert.pem
      BBL_LB_KEY: ../lb_certs/key.pem
      LB_DOMAIN: superman.routing.cf-app.com
      BBL_ENV_NAME: superman
      BBL_STATE_DIR: superman/bbl-state
      GIT_COMMIT_EMAIL: cf-routing-eng@pivotal.io
    input_mapping:
      bbl-config: updated-bbl-state
      bbl-state: updated-bbl-state
    ensure:
      put: deployments-routing
      params:
        repository: updated-bbl-state
        rebase: true
  - task: add-credhub-value
    file: routing-release-ci/ci/tasks/add-credhub-value/task.yml
    params:
      ENVIRONMENT: superman
      NAME: /bosh-superman/cf/datadog_api_key
      VALUE: ((datadog_api_key))

- name: destroy-superman
  serial_groups:
  - superman
  - superman-cats
  - superman-rats
  - superman-cipher
  build_logs_to_retain: 100
  plan:
  - in_parallel:
    - get: deployments-routing
    - get: cf-deployment-concourse-tasks
  - task: destroy-superman
    file: cf-deployment-concourse-tasks/bbl-destroy/task.yml
    params:
      BBL_STATE_DIR: superman/bbl-state
      BBL_GCP_SERVICE_ACCOUNT_KEY: ((shared_gcp_account_creds))
    input_mapping:
      bbl-state: deployments-routing
    ensure:
      put: deployments-routing
      params:
        repository: updated-bbl-state
        rebase: true

- name: delete-cf-deployment
  serial_groups:
  - superman
  - superman-cats
  - superman-rats
  - superman-cipher
  build_logs_to_retain: 100
  plan:
  - in_parallel:
    - get: cf-deployment-concourse-tasks
    - get: deployments-routing
  - task: delete-cf-deployment
    file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    input_mapping:
      bbl-state: deployments-routing
    params:
      DEPLOYMENT_NAME: cf
      BBL_STATE_DIR: superman/bbl-state

- name: bosh-cleanup
  serial_groups: [superman]
  plan:
  - get: routing-release
    passed: [superman-deploy-cf]
    trigger: true
  - get: deployments-routing
  - get: cf-deployment-concourse-tasks
  - task: cleanup-artifacts
    file: cf-deployment-concourse-tasks/bosh-cleanup/task.yml
    params:
      BBL_STATE_DIR: superman/bbl-state
    input_mapping:
      bbl-state: deployments-routing
