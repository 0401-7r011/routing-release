groups:
- name: routing-final-pipeline
  jobs:
  - ship-what
  - create-final-routing-release
  - merge-master-into-develop

resource_types:
- name: neo-bosh-deployment
  type: docker-image
  source:
    repository: cloudfoundry/bosh-deployment-resource

resources:
- name: routing-release-rc
  type: git
  source:
    branch: release-candidate
    uri: https://github.com/cloudfoundry/routing-release.git
    private_key: ((github_private_key.private_key))

- name: routing-release-master
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/routing-release.git
    rebase: true
    private_key: ((github_private_key.private_key))

- name: routing-github-release
  type: github-release
  source:
    user: cloudfoundry
    repository: routing-release
    access_token: ((github_access_token))
    drafts: true

- name: routing-release-develop
  type: git
  source:
    branch: develop
    uri: git@github.com:cloudfoundry/routing-release.git
    private_key: ((github_private_key.private_key))

- name: routing-perf-release
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/routing-perf-release.git

- name: routing-release-ci
  type: git
  source:
    branch: develop
    uri: git@github.com:cloudfoundry/routing-release.git
    private_key: ((github_private_key.private_key))
    paths:
      - ci

- name: final-version
  type: semver
  source:
    access_key_id: ((concourse_aws_access_key_id))
    secret_access_key: ((concourse_aws_secret_access_key))
    bucket: ci-routing-version
    initial_version: 0.195.0
    key: final-version
    region_name: us-east-1

- name: cf-routing-release-tarball
  type: s3
  source:
    bucket: routing-release-bp
    access_key_id: ((concourse_aws_access_key_id))
    secret_access_key: ((concourse_aws_secret_access_key))
    regexp: routing-(\d+\.\d+\.\d+).*\.tgz

- name: router-final-release
  type: s3
  source:
    bucket: routing-final-releases
    regexp: routing-(.*).tgz
    access_key_id: ((batman_aws_access_key_id))
    secret_access_key: ((batman_aws_secret_access_key))

jobs:
- name: ship-what
  serial: true
  serial_groups:
    - final-release-group
  plan:
  - in_parallel:
    - get: routing-release-rc
      params:
        submodules: all
      trigger: true
    - get: routing-release-ci
    - get: final-version
  - task: build-release-notes
    file: routing-release-ci/ci/tasks/build-release-notes/task.yml
    input_mapping:
      master-release: routing-release-rc

- name: create-final-routing-release
  serial: true
  serial_groups:
    - final-release-group
  plan:
  - in_parallel:
    - get: cf-routing-release-tarball
    - get: routing-perf-release
    - get: routing-release-master
      resource: routing-release-master
    - get: routing-release
      resource: routing-release-rc
      params:
        submodules: all
    - get: final-version
      passed: [ship-what]
    - get: routing-release-ci
  - task: check-remote-release
    file: routing-release-ci/ci/tasks/check-release/task.yml
    input_mapping:
      version: final-version
  - task: create-final-release
    params:
      CF_ROUTING_RELEASE_RC_DIR: routing-release
      GCP_BLOBSTORE_SERVICE_ACCOUNT_KEY: ((gcp_routing_blobstore_service_account_key))
    file: routing-release-ci/ci/tasks/create-final-routing-release/task.yml
    input_mapping:
      version: final-version
  - task: create-release-checksum
    file: routing-release-ci/ci/tasks/create-release-checksum/task.yml
    input_mapping:
      version: final-version
  - put: router-final-release
    params:
      file: cf-routing-bosh-release/routing-*.tgz
  - put: routing-release-master
    params:
      repository: routing-release-final
      tag: final-version/version
  - put: routing-github-release
    params:
      name: final-version/version
      tag: final-version/version
      globs:
      - cf-routing-bosh-release/routing-*.tgz
      - release-checksum/*.sha256
  - put: final-version
    params:
      bump: minor

- name: merge-master-into-develop
  serial: true
  serial_groups:
    - final-release-group
  plan:
  - in_parallel:
    - get: routing-release-ci
    - get: cf-routing-release-develop
      resource: routing-release-develop
      params:
        submodules: none
    - get: cf-routing-release-master
      resource: routing-release-master
      trigger: true
      passed:
        - create-final-routing-release
      params:
        submodules: none
  - task: merge-master-into-develop
    file: routing-release-ci/ci/tasks/merge-routing-release-master-into-develop/task.yml
  - put: routing-release-develop
    params:
      repository: cf-routing-release-mergedmaster

