#!/bin/bash
set -eu -o pipefail

push_an_app() {
  export CF_USERNAME='admin'
  CF_PASSWORD="$(credhub get -n "/bosh-${ENVIRONMENT}/cf/cf_admin_password" -j | jq .value -r)"
  export CF_PASSWORD
  cf api "api.${ENV_DOMAIN_NAME}" --skip-ssl-validation
  cf auth
  cf create-org o;
  cf create-space -o o s;
  cf target -o o -s s
  (
    cd `mktemp -d`
    touch Staticfile
    cf push staticfile
  )

  sleep 10 # it appears that the metric isn't present for
           # the test _right_ after you push the app
}

source networking-oss-deployments/scripts/script_helpers.sh

DEPLOYMENT="cf"

if [[ -d toolsmiths-metadata-dir ]]; then
  ENVIRONMENT="$(cat toolsmiths-metadata-dir/name)"
  ENV_DOMAIN_NAME="${ENVIRONMENT}.cf-app.com"
  bosh_login_toolsmiths

elif [[ -d networking-oss-deployments ]]; then
  if [[ ! -n "${ENVIRONMENT}" ]]; then
    echo 'Failed to specify "ENVIRONMENT" when using "networking-oss-deployments"'
    exit 1
  fi

  ENV_DOMAIN_NAME="${ENVIRONMENT}.routing.cf-app.com"

  bosh_login "${ENVIRONMENT}"

else
  echo 'Failed to provide either "toolsmiths-metadata-dir" or "networking-oss-deployments"'
  exit 2
fi

push_an_app

QUERY_ENDPOINT="https://log-cache.${ENV_DOMAIN_NAME}"
CLIENT_NAME="indicator_protocol_test"
CLIENT_SECRET="$(credhub get -n /bosh-${ENVIRONMENT}/cf/uaa_clients_indicator_protocol_test_secret -j | jq .value -r)"

uaac target https://uaa.${ENV_DOMAIN_NAME} --skip-ssl-validation
uaac token client get ${CLIENT_NAME} -s ${CLIENT_SECRET}
TOKEN=$(uaac context  | grep access_token | awk '{ print $2 }')

bosh scp -d $DEPLOYMENT router/0:/var/vcap/jobs/gorouter/config/indicators.yml .

# The binary releases for the indicator protocol verification binary include the version
# which can change over time.
# https://github.com/pivotal/monitoring-indicator-protocol/releases
VERIFICATION_BIN=$(find indicator-protocol-release -maxdepth 1 -type f -name "indicator-verification-linux64*")
chmod +x $VERIFICATION_BIN

$VERIFICATION_BIN \
  -indicators indicators.yml \
  -metadata deployment=$DEPLOYMENT \
  -authorization "$TOKEN" \
  -query-endpoint "${QUERY_ENDPOINT}" \
  -k
